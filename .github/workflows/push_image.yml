name: ecr push image
on:
  push:
jobs:
  push:
    runs-on: ubuntu-latest
    # `permissions` を設定しないと OIDC が使えないので注意
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      # AWS CLIデバッグ出力を設定
      - name: Set AWS CLI Debug Output
        run: |
          echo "AWS_DEFAULT_OUTPUT=text" >> $GITHUB_ENV
          echo "AWS_PAGER=" >> $GITHUB_ENV
          echo "AWS_DEBUG=true" >> $GITHUB_ENV
          
      # AWS 認証
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: 'ap-northeast-1' # リージョンを指定
          role-to-assume: 'arn:aws:iam::925173743335:role/oidc-role'

      # ECR ログイン
      - uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr # outputs で参照するために id を設定

      # Docker イメージを build・push する
      - name: build and push docker image to ecr
        env:
          # ECR レジストリを `aws-actions/amazon-ecr-login` アクションの `outputs.registry` から取得
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          # イメージを push する ECR リポジトリ名
          REPOSITORY: "twitter-clone"
          # イメージタグ。 Git のコミットハッシュにしておく
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker tag ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }} ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:latest

          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
